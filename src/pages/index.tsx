import Head from "next/head";
import { Circle } from "rc-progress";
import React, { useState } from "react";

import { api } from "~/utils/api";

export default function Home() {
  const { data: khatmCount, refetch: refetchKhatm } =
    api.khatm.getKhatmCount.useQuery();
  const submitJuzMutation = api.khatm.submitJuz.useMutation();
  const [selectedJuzes, setSelectedJuzes] = useState([]);
  const [submittedJuzes, setSubmittedJuzes] = useState([]);
  const totalJuzes = 30;

  // Calculate the progress to show on the progress bar (both selected + submitted juzes)
  const actualProgressPercent = (submittedJuzes.length / totalJuzes) * 100;
  const previewPercent =
    ((selectedJuzes.length + submittedJuzes.length) / totalJuzes) * 100;

  const handleSelectJuz = (juz: never) => {
    // Toggle Juz selection, unless already submitted
    if (!submittedJuzes.includes(juz)) {
      setSelectedJuzes(
        (prevSelected) =>
          prevSelected.includes(juz)
            ? prevSelected.filter((item) => item !== juz) // Deselect if already selected
            : [...prevSelected, juz], // Select if not selected
      );
    }
  };

  const handleSubmit = async () => {
    await submitJuzMutation.mutateAsync(selectedJuzes.length); // Submit number of Juzes
    setSubmittedJuzes([...submittedJuzes, ...selectedJuzes]);
    setSelectedJuzes([]);
    await refetchKhatm(); // Refetch khatm count after submission
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" from-[  #000000] min-h-screen bg-gradient-to-b from-[#000]  to-[#000]">
        <nav className="flex items-center justify-between  p-6 shadow">
          <div className="text-2xl font-bold text-white">
            Ummah For Palestine ðŸ‡µðŸ‡¸
          </div>
          <div>
            <button className="mr-4 rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700">
              Log In
            </button>
            <button className="rounded bg-gray-800 px-4 py-2 text-white hover:bg-gray-900">
              Sign Up
            </button>
          </div>
        </nav>
        <div className="mx-auto max-w-3xl flex-1 gap-4 p-6">
          <div className="mb-6 text-center text-lg font-semibold text-white">
            Current Khatm Count: {khatmCount ?? 0}
          </div>
          <h2 className="mb-4 text-center text-2xl font-bold text-white">
            Select a Juz You Read
          </h2>
          {/* Progress Circle with Juz Selector */}
          <div className="relative mx-auto flex h-[550px]  w-[550px] items-center justify-center">
            <Circle
              className="absolute h-full w-full"
              percent={previewPercent} // Combined progress of actual and preview
              strokeWidth={3}
              strokeLinecap="round"
              strokeColor="#B3DFAB" // Preview progress color (green)
              trailColor="#808080"
            />

            {/* Actual progress in white, above preview */}
            <Circle
              className="absolute h-full w-full"
              percent={actualProgressPercent} // Only submitted Juzes
              strokeWidth={3}
              strokeLinecap="round"
              strokeColor="#ffffff" // Actual progress color (white)
              trailColor="transparent"
            />
            {/* Juz Selector */}
            <div className="absolute grid grid-cols-5 justify-center gap-4">
              {[...Array(30)].map((_, i) => (
                <button
                  key={i + 1}
                  onClick={() => handleSelectJuz((i + 1) as never)}
                  className={`flex h-12 w-12 items-center justify-center rounded-full border border-white font-bold text-white transition-colors duration-300 ${
                    submittedJuzes.includes((i + 1) as never)
                      ? "cursor-not-allowed bg-gray-600 text-gray-400" // Disable submitted Juzes
                      : selectedJuzes.includes((i + 1) as never)
                      ? "bg-[#B3DFAB] text-gray-800" // Indicate currently selected Juzes
                      : "bg-transparent hover:border-gray-600 hover:bg-gray-800"
                  }`}
                  disabled={submittedJuzes.includes((i + 1) as never)}
                >
                  {i + 1}
                </button>
              ))}
            </div>
          </div>

          {/* Submit Button */}
          <div className="mt-8  text-center">
            <button
              className="rounded-full bg-white px-6 py-2 font-medium text-black hover:bg-gray-700"
              onClick={() => handleSubmit}
            >
              Submit Juz(s)
            </button>
          </div>
        </div>
      </main>
    </>
  );
}

// function AuthShowcase() {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined },
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// }
